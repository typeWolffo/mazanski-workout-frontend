{
  "plugins": ["eslint-plugin-jest", "eslint-plugin-testing-library"],
  "env": {
    "jest/globals": true
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@next/next/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:eslint-plugin-jest/recommended",
    "plugin:eslint-plugin-testing-library/react"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "rules": {
    "object-curly-spacing": ["warn", "always"],
    "no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "none"
      }
    ],
    "@typescript-eslint/semi": ["off"],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "none"
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error",
      {
        "ignoreRestArgs": true
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 200,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true
      }
    ],
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "react/jsx-props-no-spreading": "off",
    "import/prefer-default-export": "error",
    "react/jsx-boolean-value": "off",
    "react/prop-types": "off",
    "react/no-unescaped-entities": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-wrap-multilines": "off",
    "react/destructuring-assignment": "off",
    "react-hooks/exhaustive-deps": "off",
    "react/react-in-jsx-scope": "off",
    "testing-library/prefer-screen-queries": "off",
    "testing-library/no-node-access": "off",
    "testing-library/render-result-naming-convention": "off",
    "testing-library/prefer-presence-queries": "off",
    "testing-library/prefer-find-by": "warn",
    "testing-library/no-await-sync-query": "warn",
    "testing-library/no-unnecessary-act": "warn",
    "testing-library/no-wait-for-multiple-assertions": "warn",
    "default-param-last": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase"]
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "function",
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": ["enum", "enumMember"],
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": ["method"],
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      }
    ],
    "no-var": "error",
    "prefer-const": "error",
    "no-case-declarations": "warn",
    "no-return-await": "error",
    "import/no-unresolved": "off",
    "import/named": "warn",
    "import/namespace": "warn",
    "import/no-named-as-default": "off",
    "import/export": "warn",
    "import/order": [
      "error",
      {
        "groups": [
          ["external", "builtin"],
          "internal",
          ["sibling", "parent"],
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "sort-imports": [
      "error",
      { "ignoreCase": true, "ignoreDeclarationSort": true }
    ],
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off"
  }
}
